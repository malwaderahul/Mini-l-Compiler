Grammar

    0 $accept: input $end

    1 input: Program

    2 Program: PROGRAM IDENT SEMICOLON block END_PROGRAM

    3 block: decl_list BEGIN_PROGRAM stmt_list

    4 decl_list: declaration SEMICOLON
    5          | declaration SEMICOLON decl_list

    6 declaration: id_list COLON INTEGER
    7            | id_list COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    8 id_list: IDENT
    9        | IDENT COMMA id_list

   10 elif_list: ELSEIF bool_exp stmt_list
   11          | ELSEIF bool_exp stmt_list ELSE stmt_list
   12          | ELSEIF bool_exp stmt_list elif_list

   13 stmt_list: statement SEMICOLON
   14          | statement SEMICOLON stmt_list

   15 var_list: var
   16         | var COMMA var_list

   17 statement: EXIT
   18          | BREAK
   19          | CONTINUE
   20          | READ var_list
   21          | WRITE var_list
   22          | DO BEGINLOOP stmt_list ENDLOOP WHILE bool_exp
   23          | WHILE bool_exp BEGINLOOP stmt_list ENDLOOP
   24          | var ASSIGN expression
   25          | var ASSIGN bool_exp QUESTION expression COLON expression
   26          | IF bool_exp THEN stmt_list ENDIF
   27          | IF bool_exp THEN stmt_list ELSE stmt_list ENDIF
   28          | IF bool_exp THEN stmt_list elif_list ENDIF

   29 bool_exp: relation_and_exp
   30         | bool_exp OR relation_and_exp

   31 relation_and_exp: relation_exp
   32                 | relation_and_exp AND relation_exp

   33 relation_expA: expression comp expression
   34              | TRUE
   35              | FALSE
   36              | L_PAREN bool_exp R_PAREN

   37 relation_exp: NOT relation_expA
   38             | relation_expA

   39 comp: EQ
   40     | NEQ
   41     | LTE
   42     | GTE
   43     | LT
   44     | GT

   45 m_exp: term
   46      | m_exp MULT term
   47      | m_exp DIV term
   48      | m_exp MOD term

   49 expression: m_exp
   50           | expression ADD m_exp
   51           | expression SUB m_exp

   52 var: IDENT L_BRACKET expression R_BRACKET
   53    | IDENT

   54 term: SUB termA
   55     | termA

   56 termA: var
   57      | NUMBER
   58      | L_PAREN expression R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 7 57
IDENT (259) 2 8 9 52 53
SEMICOLON (260) 2 4 5 13 14
BEGIN_PROGRAM (261) 3
END_PROGRAM (262) 2
ASSIGN (263) 24 25
L_PAREN (264) 36 58
R_PAREN (265) 36 58
COLON (266) 6 7 25
INTEGER (267) 6 7
PROGRAM (268) 2
L_BRACKET (269) 7 52
R_BRACKET (270) 7 52
ARRAY (271) 7
OF (272) 7
IF (273) 26 27 28
THEN (274) 26 27 28
ENDIF (275) 26 27 28
ELSE (276) 11 27
ELSEIF (277) 10 11 12
WHILE (278) 22 23
DO (279) 22
BEGINLOOP (280) 22 23
BREAK (281) 18
CONTINUE (282) 19
ENDLOOP (283) 22 23
EXIT (284) 17
READ (285) 20
WRITE (286) 21
COMMA (287) 9 16
QUESTION (288) 25
TRUE (289) 34
FALSE (290) 35
AND (291) 32
OR (292) 30
NOT (293) 37
EQ (294) 39
NEQ (295) 40
LT (296) 43
GT (297) 44
LTE (298) 41
GTE (299) 42
ADD (300) 50
SUB (301) 51 54
MULT (302) 46
DIV (303) 47
MOD (304) 48


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
input (51)
    on left: 1, on right: 0
Program (52)
    on left: 2, on right: 1
block (53)
    on left: 3, on right: 2
decl_list (54)
    on left: 4 5, on right: 3 5
declaration (55)
    on left: 6 7, on right: 4 5
id_list (56)
    on left: 8 9, on right: 6 7 9
elif_list (57)
    on left: 10 11 12, on right: 12 28
stmt_list (58)
    on left: 13 14, on right: 3 10 11 12 14 22 23 26 27 28
var_list (59)
    on left: 15 16, on right: 16 20 21
statement (60)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28, on right: 13 14
bool_exp (61)
    on left: 29 30, on right: 10 11 12 22 23 25 26 27 28 30 36
relation_and_exp (62)
    on left: 31 32, on right: 29 30 32
relation_expA (63)
    on left: 33 34 35 36, on right: 37 38
relation_exp (64)
    on left: 37 38, on right: 31 32
comp (65)
    on left: 39 40 41 42 43 44, on right: 33
m_exp (66)
    on left: 45 46 47 48, on right: 46 47 48 49 50 51
expression (67)
    on left: 49 50 51, on right: 24 25 33 50 51 52 58
var (68)
    on left: 52 53, on right: 15 16 24 25 56
term (69)
    on left: 54 55, on right: 45 46 47 48
termA (70)
    on left: 56 57 58, on right: 54 55


State 0

    0 $accept: . input $end

    PROGRAM  shift, and go to state 1

    input    go to state 2
    Program  go to state 3


State 1

    2 Program: PROGRAM . IDENT SEMICOLON block END_PROGRAM

    IDENT  shift, and go to state 4


State 2

    0 $accept: input . $end

    $end  shift, and go to state 5


State 3

    1 input: Program .

    $default  reduce using rule 1 (input)


State 4

    2 Program: PROGRAM IDENT . SEMICOLON block END_PROGRAM

    SEMICOLON  shift, and go to state 6


State 5

    0 $accept: input $end .

    $default  accept


State 6

    2 Program: PROGRAM IDENT SEMICOLON . block END_PROGRAM

    IDENT  shift, and go to state 7

    block        go to state 8
    decl_list    go to state 9
    declaration  go to state 10
    id_list      go to state 11


State 7

    8 id_list: IDENT .
    9        | IDENT . COMMA id_list

    COMMA  shift, and go to state 12

    $default  reduce using rule 8 (id_list)


State 8

    2 Program: PROGRAM IDENT SEMICOLON block . END_PROGRAM

    END_PROGRAM  shift, and go to state 13


State 9

    3 block: decl_list . BEGIN_PROGRAM stmt_list

    BEGIN_PROGRAM  shift, and go to state 14


State 10

    4 decl_list: declaration . SEMICOLON
    5          | declaration . SEMICOLON decl_list

    SEMICOLON  shift, and go to state 15


State 11

    6 declaration: id_list . COLON INTEGER
    7            | id_list . COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 12

    9 id_list: IDENT COMMA . id_list

    IDENT  shift, and go to state 7

    id_list  go to state 17


State 13

    2 Program: PROGRAM IDENT SEMICOLON block END_PROGRAM .

    $default  reduce using rule 2 (Program)


State 14

    3 block: decl_list BEGIN_PROGRAM . stmt_list

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26

    stmt_list  go to state 27
    statement  go to state 28
    var        go to state 29


State 15

    4 decl_list: declaration SEMICOLON .
    5          | declaration SEMICOLON . decl_list

    IDENT  shift, and go to state 7

    $default  reduce using rule 4 (decl_list)

    decl_list    go to state 30
    declaration  go to state 10
    id_list      go to state 11


State 16

    6 declaration: id_list COLON . INTEGER
    7            | id_list COLON . ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    INTEGER  shift, and go to state 31
    ARRAY    shift, and go to state 32


State 17

    9 id_list: IDENT COMMA id_list .

    $default  reduce using rule 9 (id_list)


State 18

   52 var: IDENT . L_BRACKET expression R_BRACKET
   53    | IDENT .

    L_BRACKET  shift, and go to state 33

    $default  reduce using rule 53 (var)


State 19

   26 statement: IF . bool_exp THEN stmt_list ENDIF
   27          | IF . bool_exp THEN stmt_list ELSE stmt_list ENDIF
   28          | IF . bool_exp THEN stmt_list elif_list ENDIF

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp          go to state 40
    relation_and_exp  go to state 41
    relation_expA     go to state 42
    relation_exp      go to state 43
    m_exp             go to state 44
    expression        go to state 45
    var               go to state 46
    term              go to state 47
    termA             go to state 48


State 20

   23 statement: WHILE . bool_exp BEGINLOOP stmt_list ENDLOOP

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp          go to state 49
    relation_and_exp  go to state 41
    relation_expA     go to state 42
    relation_exp      go to state 43
    m_exp             go to state 44
    expression        go to state 45
    var               go to state 46
    term              go to state 47
    termA             go to state 48


State 21

   22 statement: DO . BEGINLOOP stmt_list ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 50


State 22

   18 statement: BREAK .

    $default  reduce using rule 18 (statement)


State 23

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


State 24

   17 statement: EXIT .

    $default  reduce using rule 17 (statement)


State 25

   20 statement: READ . var_list

    IDENT  shift, and go to state 18

    var_list  go to state 51
    var       go to state 52


State 26

   21 statement: WRITE . var_list

    IDENT  shift, and go to state 18

    var_list  go to state 53
    var       go to state 52


State 27

    3 block: decl_list BEGIN_PROGRAM stmt_list .

    $default  reduce using rule 3 (block)


State 28

   13 stmt_list: statement . SEMICOLON
   14          | statement . SEMICOLON stmt_list

    SEMICOLON  shift, and go to state 54


State 29

   24 statement: var . ASSIGN expression
   25          | var . ASSIGN bool_exp QUESTION expression COLON expression

    ASSIGN  shift, and go to state 55


State 30

    5 decl_list: declaration SEMICOLON decl_list .

    $default  reduce using rule 5 (decl_list)


State 31

    6 declaration: id_list COLON INTEGER .

    $default  reduce using rule 6 (declaration)


State 32

    7 declaration: id_list COLON ARRAY . L_BRACKET NUMBER R_BRACKET OF INTEGER

    L_BRACKET  shift, and go to state 56


State 33

   52 var: IDENT L_BRACKET . expression R_BRACKET

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    m_exp       go to state 44
    expression  go to state 58
    var         go to state 46
    term        go to state 47
    termA       go to state 48


State 34

   57 termA: NUMBER .

    $default  reduce using rule 57 (termA)


State 35

   36 relation_expA: L_PAREN . bool_exp R_PAREN
   58 termA: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp          go to state 59
    relation_and_exp  go to state 41
    relation_expA     go to state 42
    relation_exp      go to state 43
    m_exp             go to state 44
    expression        go to state 60
    var               go to state 46
    term              go to state 47
    termA             go to state 48


State 36

   34 relation_expA: TRUE .

    $default  reduce using rule 34 (relation_expA)


State 37

   35 relation_expA: FALSE .

    $default  reduce using rule 35 (relation_expA)


State 38

   37 relation_exp: NOT . relation_expA

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    SUB      shift, and go to state 39

    relation_expA  go to state 61
    m_exp          go to state 44
    expression     go to state 45
    var            go to state 46
    term           go to state 47
    termA          go to state 48


State 39

   54 term: SUB . termA

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57

    var    go to state 46
    termA  go to state 62


State 40

   26 statement: IF bool_exp . THEN stmt_list ENDIF
   27          | IF bool_exp . THEN stmt_list ELSE stmt_list ENDIF
   28          | IF bool_exp . THEN stmt_list elif_list ENDIF
   30 bool_exp: bool_exp . OR relation_and_exp

    THEN  shift, and go to state 63
    OR    shift, and go to state 64


State 41

   29 bool_exp: relation_and_exp .
   32 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 65

    $default  reduce using rule 29 (bool_exp)


State 42

   38 relation_exp: relation_expA .

    $default  reduce using rule 38 (relation_exp)


State 43

   31 relation_and_exp: relation_exp .

    $default  reduce using rule 31 (relation_and_exp)


State 44

   46 m_exp: m_exp . MULT term
   47      | m_exp . DIV term
   48      | m_exp . MOD term
   49 expression: m_exp .

    MULT  shift, and go to state 66
    DIV   shift, and go to state 67
    MOD   shift, and go to state 68

    $default  reduce using rule 49 (expression)


State 45

   33 relation_expA: expression . comp expression
   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp

    EQ   shift, and go to state 69
    NEQ  shift, and go to state 70
    LT   shift, and go to state 71
    GT   shift, and go to state 72
    LTE  shift, and go to state 73
    GTE  shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    comp  go to state 77


State 46

   56 termA: var .

    $default  reduce using rule 56 (termA)


State 47

   45 m_exp: term .

    $default  reduce using rule 45 (m_exp)


State 48

   55 term: termA .

    $default  reduce using rule 55 (term)


State 49

   23 statement: WHILE bool_exp . BEGINLOOP stmt_list ENDLOOP
   30 bool_exp: bool_exp . OR relation_and_exp

    BEGINLOOP  shift, and go to state 78
    OR         shift, and go to state 64


State 50

   22 statement: DO BEGINLOOP . stmt_list ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26

    stmt_list  go to state 79
    statement  go to state 28
    var        go to state 29


State 51

   20 statement: READ var_list .

    $default  reduce using rule 20 (statement)


State 52

   15 var_list: var .
   16         | var . COMMA var_list

    COMMA  shift, and go to state 80

    $default  reduce using rule 15 (var_list)


State 53

   21 statement: WRITE var_list .

    $default  reduce using rule 21 (statement)


State 54

   13 stmt_list: statement SEMICOLON .
   14          | statement SEMICOLON . stmt_list

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26

    $default  reduce using rule 13 (stmt_list)

    stmt_list  go to state 81
    statement  go to state 28
    var        go to state 29


State 55

   24 statement: var ASSIGN . expression
   25          | var ASSIGN . bool_exp QUESTION expression COLON expression

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp          go to state 82
    relation_and_exp  go to state 41
    relation_expA     go to state 42
    relation_exp      go to state 43
    m_exp             go to state 44
    expression        go to state 83
    var               go to state 46
    term              go to state 47
    termA             go to state 48


State 56

    7 declaration: id_list COLON ARRAY L_BRACKET . NUMBER R_BRACKET OF INTEGER

    NUMBER  shift, and go to state 84


State 57

   58 termA: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    m_exp       go to state 44
    expression  go to state 85
    var         go to state 46
    term        go to state 47
    termA       go to state 48


State 58

   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp
   52 var: IDENT L_BRACKET expression . R_BRACKET

    R_BRACKET  shift, and go to state 86
    ADD        shift, and go to state 75
    SUB        shift, and go to state 76


State 59

   30 bool_exp: bool_exp . OR relation_and_exp
   36 relation_expA: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 87
    OR       shift, and go to state 64


State 60

   33 relation_expA: expression . comp expression
   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp
   58 termA: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 88
    EQ       shift, and go to state 69
    NEQ      shift, and go to state 70
    LT       shift, and go to state 71
    GT       shift, and go to state 72
    LTE      shift, and go to state 73
    GTE      shift, and go to state 74
    ADD      shift, and go to state 75
    SUB      shift, and go to state 76

    comp  go to state 77


State 61

   37 relation_exp: NOT relation_expA .

    $default  reduce using rule 37 (relation_exp)


State 62

   54 term: SUB termA .

    $default  reduce using rule 54 (term)


State 63

   26 statement: IF bool_exp THEN . stmt_list ENDIF
   27          | IF bool_exp THEN . stmt_list ELSE stmt_list ENDIF
   28          | IF bool_exp THEN . stmt_list elif_list ENDIF

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26

    stmt_list  go to state 89
    statement  go to state 28
    var        go to state 29


State 64

   30 bool_exp: bool_exp OR . relation_and_exp

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    relation_and_exp  go to state 90
    relation_expA     go to state 42
    relation_exp      go to state 43
    m_exp             go to state 44
    expression        go to state 45
    var               go to state 46
    term              go to state 47
    termA             go to state 48


State 65

   32 relation_and_exp: relation_and_exp AND . relation_exp

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    relation_expA  go to state 42
    relation_exp   go to state 91
    m_exp          go to state 44
    expression     go to state 45
    var            go to state 46
    term           go to state 47
    termA          go to state 48


State 66

   46 m_exp: m_exp MULT . term

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    var    go to state 46
    term   go to state 92
    termA  go to state 48


State 67

   47 m_exp: m_exp DIV . term

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    var    go to state 46
    term   go to state 93
    termA  go to state 48


State 68

   48 m_exp: m_exp MOD . term

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    var    go to state 46
    term   go to state 94
    termA  go to state 48


State 69

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


State 70

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


State 71

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 72

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 73

   41 comp: LTE .

    $default  reduce using rule 41 (comp)


State 74

   42 comp: GTE .

    $default  reduce using rule 42 (comp)


State 75

   50 expression: expression ADD . m_exp

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    m_exp  go to state 95
    var    go to state 46
    term   go to state 47
    termA  go to state 48


State 76

   51 expression: expression SUB . m_exp

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    m_exp  go to state 96
    var    go to state 46
    term   go to state 47
    termA  go to state 48


State 77

   33 relation_expA: expression comp . expression

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    m_exp       go to state 44
    expression  go to state 97
    var         go to state 46
    term        go to state 47
    termA       go to state 48


State 78

   23 statement: WHILE bool_exp BEGINLOOP . stmt_list ENDLOOP

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26

    stmt_list  go to state 98
    statement  go to state 28
    var        go to state 29


State 79

   22 statement: DO BEGINLOOP stmt_list . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 99


State 80

   16 var_list: var COMMA . var_list

    IDENT  shift, and go to state 18

    var_list  go to state 100
    var       go to state 52


State 81

   14 stmt_list: statement SEMICOLON stmt_list .

    $default  reduce using rule 14 (stmt_list)


State 82

   25 statement: var ASSIGN bool_exp . QUESTION expression COLON expression
   30 bool_exp: bool_exp . OR relation_and_exp

    QUESTION  shift, and go to state 101
    OR        shift, and go to state 64


State 83

   24 statement: var ASSIGN expression .
   33 relation_expA: expression . comp expression
   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp

    EQ   shift, and go to state 69
    NEQ  shift, and go to state 70
    LT   shift, and go to state 71
    GT   shift, and go to state 72
    LTE  shift, and go to state 73
    GTE  shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 24 (statement)

    comp  go to state 77


State 84

    7 declaration: id_list COLON ARRAY L_BRACKET NUMBER . R_BRACKET OF INTEGER

    R_BRACKET  shift, and go to state 102


State 85

   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp
   58 termA: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 88
    ADD      shift, and go to state 75
    SUB      shift, and go to state 76


State 86

   52 var: IDENT L_BRACKET expression R_BRACKET .

    $default  reduce using rule 52 (var)


State 87

   36 relation_expA: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 36 (relation_expA)


State 88

   58 termA: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (termA)


State 89

   26 statement: IF bool_exp THEN stmt_list . ENDIF
   27          | IF bool_exp THEN stmt_list . ELSE stmt_list ENDIF
   28          | IF bool_exp THEN stmt_list . elif_list ENDIF

    ENDIF   shift, and go to state 103
    ELSE    shift, and go to state 104
    ELSEIF  shift, and go to state 105

    elif_list  go to state 106


State 90

   30 bool_exp: bool_exp OR relation_and_exp .
   32 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 65

    $default  reduce using rule 30 (bool_exp)


State 91

   32 relation_and_exp: relation_and_exp AND relation_exp .

    $default  reduce using rule 32 (relation_and_exp)


State 92

   46 m_exp: m_exp MULT term .

    $default  reduce using rule 46 (m_exp)


State 93

   47 m_exp: m_exp DIV term .

    $default  reduce using rule 47 (m_exp)


State 94

   48 m_exp: m_exp MOD term .

    $default  reduce using rule 48 (m_exp)


State 95

   46 m_exp: m_exp . MULT term
   47      | m_exp . DIV term
   48      | m_exp . MOD term
   50 expression: expression ADD m_exp .

    MULT  shift, and go to state 66
    DIV   shift, and go to state 67
    MOD   shift, and go to state 68

    $default  reduce using rule 50 (expression)


State 96

   46 m_exp: m_exp . MULT term
   47      | m_exp . DIV term
   48      | m_exp . MOD term
   51 expression: expression SUB m_exp .

    MULT  shift, and go to state 66
    DIV   shift, and go to state 67
    MOD   shift, and go to state 68

    $default  reduce using rule 51 (expression)


State 97

   33 relation_expA: expression comp expression .
   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 33 (relation_expA)


State 98

   23 statement: WHILE bool_exp BEGINLOOP stmt_list . ENDLOOP

    ENDLOOP  shift, and go to state 107


State 99

   22 statement: DO BEGINLOOP stmt_list ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 108


State 100

   16 var_list: var COMMA var_list .

    $default  reduce using rule 16 (var_list)


State 101

   25 statement: var ASSIGN bool_exp QUESTION . expression COLON expression

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    m_exp       go to state 44
    expression  go to state 109
    var         go to state 46
    term        go to state 47
    termA       go to state 48


State 102

    7 declaration: id_list COLON ARRAY L_BRACKET NUMBER R_BRACKET . OF INTEGER

    OF  shift, and go to state 110


State 103

   26 statement: IF bool_exp THEN stmt_list ENDIF .

    $default  reduce using rule 26 (statement)


State 104

   27 statement: IF bool_exp THEN stmt_list ELSE . stmt_list ENDIF

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26

    stmt_list  go to state 111
    statement  go to state 28
    var        go to state 29


State 105

   10 elif_list: ELSEIF . bool_exp stmt_list
   11          | ELSEIF . bool_exp stmt_list ELSE stmt_list
   12          | ELSEIF . bool_exp stmt_list elif_list

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp          go to state 112
    relation_and_exp  go to state 41
    relation_expA     go to state 42
    relation_exp      go to state 43
    m_exp             go to state 44
    expression        go to state 45
    var               go to state 46
    term              go to state 47
    termA             go to state 48


State 106

   28 statement: IF bool_exp THEN stmt_list elif_list . ENDIF

    ENDIF  shift, and go to state 113


State 107

   23 statement: WHILE bool_exp BEGINLOOP stmt_list ENDLOOP .

    $default  reduce using rule 23 (statement)


State 108

   22 statement: DO BEGINLOOP stmt_list ENDLOOP WHILE . bool_exp

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 35
    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    NOT      shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp          go to state 114
    relation_and_exp  go to state 41
    relation_expA     go to state 42
    relation_exp      go to state 43
    m_exp             go to state 44
    expression        go to state 45
    var               go to state 46
    term              go to state 47
    termA             go to state 48


State 109

   25 statement: var ASSIGN bool_exp QUESTION expression . COLON expression
   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp

    COLON  shift, and go to state 115
    ADD    shift, and go to state 75
    SUB    shift, and go to state 76


State 110

    7 declaration: id_list COLON ARRAY L_BRACKET NUMBER R_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 116


State 111

   27 statement: IF bool_exp THEN stmt_list ELSE stmt_list . ENDIF

    ENDIF  shift, and go to state 117


State 112

   10 elif_list: ELSEIF bool_exp . stmt_list
   11          | ELSEIF bool_exp . stmt_list ELSE stmt_list
   12          | ELSEIF bool_exp . stmt_list elif_list
   30 bool_exp: bool_exp . OR relation_and_exp

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    OR        shift, and go to state 64

    stmt_list  go to state 118
    statement  go to state 28
    var        go to state 29


State 113

   28 statement: IF bool_exp THEN stmt_list elif_list ENDIF .

    $default  reduce using rule 28 (statement)


State 114

   22 statement: DO BEGINLOOP stmt_list ENDLOOP WHILE bool_exp .
   30 bool_exp: bool_exp . OR relation_and_exp

    OR  shift, and go to state 64

    $default  reduce using rule 22 (statement)


State 115

   25 statement: var ASSIGN bool_exp QUESTION expression COLON . expression

    NUMBER   shift, and go to state 34
    IDENT    shift, and go to state 18
    L_PAREN  shift, and go to state 57
    SUB      shift, and go to state 39

    m_exp       go to state 44
    expression  go to state 119
    var         go to state 46
    term        go to state 47
    termA       go to state 48


State 116

    7 declaration: id_list COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 117

   27 statement: IF bool_exp THEN stmt_list ELSE stmt_list ENDIF .

    $default  reduce using rule 27 (statement)


State 118

   10 elif_list: ELSEIF bool_exp stmt_list .
   11          | ELSEIF bool_exp stmt_list . ELSE stmt_list
   12          | ELSEIF bool_exp stmt_list . elif_list

    ELSE    shift, and go to state 120
    ELSEIF  shift, and go to state 105

    $default  reduce using rule 10 (elif_list)

    elif_list  go to state 121


State 119

   25 statement: var ASSIGN bool_exp QUESTION expression COLON expression .
   50 expression: expression . ADD m_exp
   51           | expression . SUB m_exp

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 25 (statement)


State 120

   11 elif_list: ELSEIF bool_exp stmt_list ELSE . stmt_list

    IDENT     shift, and go to state 18
    IF        shift, and go to state 19
    WHILE     shift, and go to state 20
    DO        shift, and go to state 21
    BREAK     shift, and go to state 22
    CONTINUE  shift, and go to state 23
    EXIT      shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26

    stmt_list  go to state 122
    statement  go to state 28
    var        go to state 29


State 121

   12 elif_list: ELSEIF bool_exp stmt_list elif_list .

    $default  reduce using rule 12 (elif_list)


State 122

   11 elif_list: ELSEIF bool_exp stmt_list ELSE stmt_list .

    $default  reduce using rule 11 (elif_list)
